How did viewing a diff or fc (file compare) between two versions of a file help you see the bug that was introduced?
It was possible to visually compare the parts of each file that were different.
Viewing the diff finds these differences without having to comapre each line of each file.
Useful for comparing big files. 
Sections of files that are the same are not shown.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
Easy to return to previous working version if errors have been introduced.
Easy to compare current versions and old versions.


What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
Pros: commit when code is ready to complile, when logical unit of work has been performed
Cons: lose work done if system crashes

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
Introducing a new feature may require that separate related files are edited at the same time.
Google docs etc. are not concerned with relations between files. 

How might using version control make you more confident to make changes that could break something?
it is easy to revert back to a previous commit especially if commits are kept small.
git checkout <commit id> allows you to use previous versions to identify where an error was introduced.

Now that you have your workspace set up, what do you want to try using Git for?
Learn about version control, write more managable code
